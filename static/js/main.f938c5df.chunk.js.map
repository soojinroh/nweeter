{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSubmit","e","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onChange","target","name","value","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","event","provider","GoogleAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","console","log","update","autoFocus","alt","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","neweets","setNweets","useEffect","onSnapshot","snapShop","nweetArray","docs","map","data","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f938c5df.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            if (newAccount) {\n                await authService.createUserWithEmailAndPassword(email, password);\n                setNewAccount(false);\n            } else {\n                await authService.signInWithEmailAndPassword(email, password);\n                setNewAccount(false);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    }\n\n    const onChange = (e) => {\n        const {target: {name, value}} = e;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    }\n\n    return ( \n    <>\n        <form onSubmit={onSubmit} className=\"container\">\n            <input name=\"email\" type=\"email\" placeholder=\"email\" required value={email} onChange={onChange} className=\"authInput\"/>\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\n            <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\"/>\n        </form>\n        {error && <span className=\"authError\">{error}</span>}\n        <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign in\" : \"create Account\"}</span>\n    </>\n    )\n}\nexport default AuthForm;","import React from \"react\";\nimport {firebaseInstance, authService} from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {target: {name}} = event;\n\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }\n\n        await authService.signInWithPopup(provider);\n    }\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n            icon={faTwitter}\n            color={\"#04AAFF\"}\n            size=\"3x\"\n            style={{ marginBottom: 30 }}\n                />\n            <AuthForm />\n            <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport React, {useState} from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async() => {\n            const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n            if (ok) {\n                // delete tweet\n                await dbService.doc(`nweets/${nweetObj.id}`).delete();\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n            }\n    }\n\n    const toggleEditing = () => setEditing(prev => !prev);\n    \n    const onSubmit = async (event) => {\n        event.preventDefault();\n        console.log(newNweet);\n        dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet\n        });\n\n        setEditing(false);\n    }\n\n    const onChange = (event) => {\n        const {\n            target : {value }\n        } = event;\n        setNewNweet(value);\n    }\n    \n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input type=\"text\" placeholder=\"edit your nweet!\" value={newNweet} required onChange={onChange} autoFocus  className=\"formInput\" />\n                        <input type=\"submit\" value=\"Edit nweet\" className=\"formBtn\" />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && <img alt=\"\" src={nweetObj.attachmentUrl} />}\n                    {isOwner && (\n                        <div class=\"nweet__actions\">\n                        <span onClick={onDeleteClick}>\n                            <FontAwesomeIcon icon={faTrash} />\n                        </span>\n                        <span onClick={toggleEditing}>\n                            <FontAwesomeIcon icon={faPencilAlt} />\n                        </span>\n                        </div>\n                    )}\n                </>        \n            )}\n        </div>\n    );\n};\n\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst NweetFactory = ({ userObj }) => {\n\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (nweet === \"\") {\n            return;\n        }\n\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        }\n\n\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setAttachment(\"\");\n        setNweet(\"\");\n    }\n\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    }\n\n    const onFileChange = (event) => {\n        const {\n            target: { files }\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const { currentTarget: { result } } = finishedEvent;\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n    }\n\n    const onClearAttachment = () => {\n        setAttachment(\"\");\n    }\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                className=\"factoryInput__input\"\n                value={nweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{opacity: 0, }}/>\n           \n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        alt=\"\"\n                        src={attachment}\n                        style={{\n                        backgroundImage: attachment,\n                        }}/>\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form>\n    )\n\n}\n\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport { dbService } from \"fbase\";\nimport React, { useState, useEffect } from \"react\";\n\n\nconst Home = ({ userObj }) => {\n    const [neweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapShop) => {\n            const nweetArray = snapShop.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        })\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {neweets.map(nweet => <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />)}\n            </div>\n        </div>\n    );\n}\n\n\nexport default Home;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n            <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n            </Link>\n        </li>\n    </ul>\n    <ul>\n        <li>\n            <Link\n            to=\"/profile\"\n            style={{\n                marginLeft: 10,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                fontSize: 12,\n            }}\n            >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n                {userObj.displayName\n                ? `${userObj.displayName}의 Profile`\n                : \"Profile\"}\n            </span>\n            </Link>\n        </li>\n    </ul>\n</nav>\n\n\nexport default Navigation;","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    }\n\n    const onChange = (event) => {\n        const {\n            target : {value }\n        } = event;\n        setNewDisplayName(value);\n    }\n\n    return (\n        <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n                <input onChange={onChange} type=\"text\" placeholder=\"Display Name\" value={newDisplayName} autoFocus  className=\"formInput\"/>\n                <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}/>\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n\n    );\n}\n\nexport default Profile;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                            style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            }}\n                        >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\n                        </Route>\n                    </div>\n                ) : (\n                        <>\n                            <Route exact path=\"/\">\n                                <Auth />\n                            </Route>\n                        </>\n                    )}\n            </Switch>\n        </Router>\n    );\n\n}\n\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  }\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\"}\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}